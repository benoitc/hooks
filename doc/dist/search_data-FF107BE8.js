searchData={"items":[{"type":"module","title":"hooks","doc":"Generic hooks system for Erlang applications.","ref":"hooks.html"},{"type":"module","title":"Overview - hooks","doc":"The `hooks` module provides a flexible and efficient hooks system that allows you to create\nextension points in your application. Hooks enable you to register multiple functions that\nwill be called at specific points in your code, similar to events or callbacks but with\nmore flexibility.","ref":"hooks.html#module-overview"},{"type":"module","title":"Features - hooks","doc":"- Priority-based execution order\n- Multiple execution strategies (run, fold, all, all_till_ok, only)\n- Plugin system with automatic hook registration\n- Efficient storage using persistent_term\n- Support for deferred initialization","ref":"hooks.html#module-features"},{"type":"module","title":"Examples - hooks","doc":"","ref":"hooks.html#module-examples"},{"type":"module","title":"Basic Hook Registration - hooks","doc":"%% Register a hook function\n    ok = hooks:reg(on_user_login, my_module, log_login, 2, 10).\n    \n    %% Run the hook\n    ok = hooks:run(on_user_login, [UserId, Timestamp]).\n    \n    %% Unregister the hook\n    ok = hooks:unreg(on_user_login, my_module, log_login, 2).","ref":"hooks.html#module-basic-hook-registration"},{"type":"module","title":"Using Plugins - hooks","doc":"%% Enable a plugin that registers its own hooks\n    ok = hooks:enable_plugin(my_plugin).\n    \n    %% Disable the plugin and unregister its hooks\n    ok = hooks:disable_plugin(my_plugin).","ref":"hooks.html#module-using-plugins"},{"type":"module","title":"Different Execution Strategies - hooks","doc":"%% Run all hooks until one returns 'stop'\n    ok = hooks:run(before_save, [Data]).\n    \n    %% Fold over hooks with an accumulator\n    Result = hooks:run_fold(transform_data, [Input], InitialAcc).\n    \n    %% Get all results from all hooks\n    Results = hooks:all(validate_data, [Data]).\n    \n    %% Run until one returns ok or {ok, Value}\n    case hooks:all_till_ok(authenticate, [User, Pass]) of\n        ok -> authenticated;\n        {ok, UserInfo} -> {authenticated, UserInfo};\n        {error, Reasons} -> {failed, Reasons}\n    end.","ref":"hooks.html#module-different-execution-strategies"},{"type":"module","title":"Configuration - hooks","doc":"The hooks application supports the following configuration options:\n\n- `{wait_for_proc, atom()}` - Wait for a registered process before becoming ready","ref":"hooks.html#module-configuration"},{"type":"module","title":"Since - hooks","doc":"1.0.0","ref":"hooks.html#module-since"},{"type":"function","title":"hooks.all/2","doc":"","ref":"hooks.html#all/2"},{"type":"function","title":"hooks.all_till_ok/2","doc":"","ref":"hooks.html#all_till_ok/2"},{"type":"function","title":"hooks.callback_mode/0","doc":"","ref":"hooks.html#callback_mode/0"},{"type":"function","title":"hooks.code_change/4","doc":"","ref":"hooks.html#code_change/4"},{"type":"function","title":"hooks.disable_plugin/1","doc":"","ref":"hooks.html#disable_plugin/1"},{"type":"function","title":"hooks.enable_plugin/1","doc":"","ref":"hooks.html#enable_plugin/1"},{"type":"function","title":"hooks.enable_plugin/2","doc":"","ref":"hooks.html#enable_plugin/2"},{"type":"function","title":"hooks.find/1","doc":"","ref":"hooks.html#find/1"},{"type":"function","title":"hooks.handle_event/4","doc":"","ref":"hooks.html#handle_event/4"},{"type":"type","title":"hooks.hook/0","doc":"","ref":"hooks.html#t:hook/0"},{"type":"type","title":"hooks.hookname/0","doc":"","ref":"hooks.html#t:hookname/0"},{"type":"type","title":"hooks.hooks/0","doc":"","ref":"hooks.html#t:hooks/0"},{"type":"function","title":"hooks.init/1","doc":"","ref":"hooks.html#init/1"},{"type":"function","title":"hooks.mreg/1","doc":"","ref":"hooks.html#mreg/1"},{"type":"function","title":"hooks.munreg/1","doc":"","ref":"hooks.html#munreg/1"},{"type":"function","title":"hooks.not_ready/3","doc":"","ref":"hooks.html#not_ready/3"},{"type":"function","title":"hooks.only/2","doc":"","ref":"hooks.html#only/2"},{"type":"function","title":"hooks.ready/3","doc":"","ref":"hooks.html#ready/3"},{"type":"function","title":"hooks.reg/3","doc":"","ref":"hooks.html#reg/3"},{"type":"function","title":"hooks.reg/4","doc":"Register a function for a specific hook name.","ref":"hooks.html#reg/4"},{"type":"function","title":"Parameters - hooks.reg/4","doc":"* `HookName` - The hook identifier\n  * `Module` - The module containing the hook function\n  * `Fun` - The function name\n  * `Arity` - The function arity","ref":"hooks.html#reg/4-parameters"},{"type":"function","title":"Returns - hooks.reg/4","doc":"* `ok` - Registration successful\n  * `{error, term()}` - Registration failed","ref":"hooks.html#reg/4-returns"},{"type":"function","title":"Examples - hooks.reg/4","doc":"%% Register a function for the 'before_save' hook\n    ok = hooks:reg(before_save, validator, check_data, 1).","ref":"hooks.html#reg/4-examples"},{"type":"function","title":"Since - hooks.reg/4","doc":"1.0.0","ref":"hooks.html#reg/4-since"},{"type":"function","title":"hooks.reg/5","doc":"","ref":"hooks.html#reg/5"},{"type":"function","title":"hooks.run/2","doc":"","ref":"hooks.html#run/2"},{"type":"function","title":"hooks.run_fold/3","doc":"","ref":"hooks.html#run_fold/3"},{"type":"function","title":"hooks.start_link/0","doc":"","ref":"hooks.html#start_link/0"},{"type":"function","title":"hooks.terminate/3","doc":"","ref":"hooks.html#terminate/3"},{"type":"function","title":"hooks.unreg/3","doc":"","ref":"hooks.html#unreg/3"},{"type":"function","title":"hooks.unreg/4","doc":"","ref":"hooks.html#unreg/4"},{"type":"function","title":"hooks.unreg/5","doc":"","ref":"hooks.html#unreg/5"},{"type":"module","title":"hooks_app","doc":"Application callback module for the hooks application.","ref":"hooks_app.html"},{"type":"module","title":"Overview - hooks_app","doc":"This module implements the application behavior for the hooks system.\nIt manages the lifecycle of the hooks application, starting the\nsupervisor tree when the application starts.","ref":"hooks_app.html#module-overview"},{"type":"module","title":"Since - hooks_app","doc":"1.0.0","ref":"hooks_app.html#module-since"},{"type":"function","title":"hooks_app.start/2","doc":"Starts the hooks application.","ref":"hooks_app.html#start/2"},{"type":"function","title":"Parameters - hooks_app.start/2","doc":"* `StartType` - The type of start (normal, takeover, or failover)\n  * `StartArgs` - Arguments passed to the application","ref":"hooks_app.html#start/2-parameters"},{"type":"function","title":"Returns - hooks_app.start/2","doc":"* `{ok, Pid}` - On successful start, where Pid is the supervisor's PID\n  * `{error, Reason}` - If the application fails to start","ref":"hooks_app.html#start/2-returns"},{"type":"function","title":"Since - hooks_app.start/2","doc":"1.0.0","ref":"hooks_app.html#start/2-since"},{"type":"function","title":"hooks_app.stop/1","doc":"Stops the hooks application.","ref":"hooks_app.html#stop/1"},{"type":"function","title":"Parameters - hooks_app.stop/1","doc":"* `State` - The application state (ignored)","ref":"hooks_app.html#stop/1-parameters"},{"type":"function","title":"Returns - hooks_app.stop/1","doc":"Always returns `ok`.","ref":"hooks_app.html#stop/1-returns"},{"type":"function","title":"Since - hooks_app.stop/1","doc":"1.0.0","ref":"hooks_app.html#stop/1-since"},{"type":"module","title":"hooks_sup","doc":"Top-level supervisor for the hooks application.","ref":"hooks_sup.html"},{"type":"module","title":"Overview - hooks_sup","doc":"This supervisor manages the hooks gen_statem process and initializes\nthe ETS table used for hook storage. It uses a one_for_all restart\nstrategy to ensure system consistency.","ref":"hooks_sup.html#module-overview"},{"type":"module","title":"Supervision Tree - hooks_sup","doc":"hooks_sup\n        |\n        +-- hooks (gen_statem)","ref":"hooks_sup.html#module-supervision-tree"},{"type":"module","title":"Since - hooks_sup","doc":"1.0.0","ref":"hooks_sup.html#module-since"},{"type":"function","title":"hooks_sup.init/1","doc":"Initializes the supervisor.","ref":"hooks_sup.html#init/1"},{"type":"function","title":"Description - hooks_sup.init/1","doc":"This function:\n1. Creates the ETS table for hook storage\n2. Defines the child specification for the hooks gen_statem\n3. Returns the supervision strategy","ref":"hooks_sup.html#init/1-description"},{"type":"function","title":"Returns - hooks_sup.init/1","doc":"Returns `{ok, {SupFlags, ChildSpecs}}` where:\n- SupFlags uses one_for_all with no restarts allowed\n- ChildSpecs contains the hooks gen_statem worker","ref":"hooks_sup.html#init/1-returns"},{"type":"function","title":"Since - hooks_sup.init/1","doc":"1.0.0","ref":"hooks_sup.html#init/1-since"},{"type":"function","title":"hooks_sup.start_link/0","doc":"Starts the hooks supervisor.","ref":"hooks_sup.html#start_link/0"},{"type":"function","title":"Returns - hooks_sup.start_link/0","doc":"* `{ok, Pid}` - On success, where Pid is the supervisor process ID\n  * `{error, Reason}` - If the supervisor fails to start","ref":"hooks_sup.html#start_link/0-returns"},{"type":"function","title":"Since - hooks_sup.start_link/0","doc":"1.0.0","ref":"hooks_sup.html#start_link/0-since"},{"type":"extras","title":"Overview","doc":"# hooks\n\n[![Build Status](https://github.com/benoitc/hooks/workflows/CI/badge.svg)](https://github.com/benoitc/hooks/actions)\n[![Hex.pm](https://img.shields.io/hexpm/v/hooks.svg)](https://hex.pm/packages/hooks)\n[![Documentation](https://img.shields.io/badge/docs-hexdocs-blue.svg)](https://hexdocs.pm/hooks/)\n\nA generic and efficient Hooks system for Erlang and Elixir applications.","ref":"readme.html"},{"type":"extras","title":"Overview - Overview","doc":"`hooks` is a generic hooks system that allows you to augment your application by adding hooks (also known as extension points or plugins). It's designed to be efficient and minimalistic while providing powerful plugin capabilities.","ref":"readme.html#overview"},{"type":"extras","title":"Main Features - Overview","doc":"- **Simple Hook Registration** - Register hooks with priority-based execution\n- **Plugin System** - Enable/disable plugins dynamically\n- **Efficient Storage** - Uses persistent_term for constant-time hook lookups\n- **Multiple Execution Modes** - Run all, run until ok, run fold, or run only the first hook\n- **Erlang & Elixir Support** - Native support for both languages\n- **No Dependencies** - Zero runtime dependencies","ref":"readme.html#main-features"},{"type":"extras","title":"Installation - Overview","doc":"","ref":"readme.html#installation"},{"type":"extras","title":"Erlang (rebar3) - Overview","doc":"Add `hooks` to your `rebar.config` dependencies:\n\n```erlang\n{deps, [\n    {hooks, \"3.0.0\"}\n]}.\n```","ref":"readme.html#erlang-rebar3"},{"type":"extras","title":"Elixir (mix) - Overview","doc":"Add `hooks` to your `mix.exs` dependencies:\n\n```elixir\ndef deps do\n  [\n    {:hooks, \"~> 3.0.0\"}\n  ]\nend\n```","ref":"readme.html#elixir-mix"},{"type":"extras","title":"Quick Start - Overview","doc":"","ref":"readme.html#quick-start"},{"type":"extras","title":"Erlang Example - Overview","doc":"```erlang\n%% Start the hooks application\napplication:ensure_all_started(hooks).\n\n%% Register a hook\nok = hooks:reg(my_hook, my_module, my_function, 1, 0).\n\n%% Run the hook\nok = hooks:run(my_hook, [arg1]).\n\n%% Unregister the hook\nok = hooks:unreg(my_hook, my_module, my_function, 1).\n```","ref":"readme.html#erlang-example"},{"type":"extras","title":"Elixir Example - Overview","doc":"```elixir\n# Start the hooks application\nApplication.ensure_all_started(:hooks)\n\n# Register a hook\n:ok = Hooks.reg(:my_hook, MyModule, :my_function, 1)\n\n# Run the hook\n:ok = Hooks.run(:my_hook, [:arg1])\n\n# Unregister the hook\n:ok = Hooks.unreg(:my_hook, MyModule, :my_function, 1)\n```","ref":"readme.html#elixir-example"},{"type":"extras","title":"API Documentation - Overview","doc":"","ref":"readme.html#api-documentation"},{"type":"extras","title":"Hook Registration - Overview","doc":"#### `reg/3`, `reg/4`, `reg/5`\n\nRegister a hook function.\n\n```erlang\n%% Register using function name as hook name\nhooks:reg(Module, Function, Arity).\n\n%% Register with specific hook name\nhooks:reg(HookName, Module, Function, Arity).\n\n%% Register with priority (default is 0, higher priority executes first)\nhooks:reg(HookName, Module, Function, Arity, Priority).\n```\n\n#### `unreg/3`, `unreg/4`, `unreg/5`\n\nUnregister a hook function.\n\n```erlang\nhooks:unreg(Module, Function, Arity).\nhooks:unreg(HookName, Module, Function, Arity).\nhooks:unreg(HookName, Module, Function, Arity, Priority).\n```\n\n#### `mreg/1`, `munreg/1`\n\nRegister or unregister multiple hooks at once.\n\n```erlang\n%% Register multiple hooks\nHooks = [\n    {hook_name1, [{Module1, Function1, Arity1}, {Module2, Function2, Arity2}]},\n    {hook_name2, [{Module3, Function3, Arity3}]}\n],\nok = hooks:mreg(Hooks).\n\n%% Unregister multiple hooks\nok = hooks:munreg(Hooks).\n```","ref":"readme.html#hook-registration"},{"type":"extras","title":"Hook Execution - Overview","doc":"#### `run/2`\n\nExecute all hooks for a given hook name. Execution stops if a hook returns `stop`.\n\n```erlang\nok = hooks:run(HookName, Args).\n```\n\n#### `run_fold/3`\n\nFold over all hooks, passing an accumulator.\n\n```erlang\nResult = hooks:run_fold(HookName, Args, InitialAcc).\n```\n\n#### `all/2`\n\nExecute all hooks and return all results.\n\n```erlang\nResults = hooks:all(HookName, Args).\n```\n\n#### `all_till_ok/2`\n\nExecute hooks until one returns `ok` or `{ok, Value}`.\n\n```erlang\nResult = hooks:all_till_ok(HookName, Args).\n```\n\n#### `only/2`\n\nExecute only the highest priority hook.\n\n```erlang\nResult = hooks:only(HookName, Args).\n```","ref":"readme.html#hook-execution"},{"type":"extras","title":"Plugin Management - Overview","doc":"#### `enable_plugin/1`, `enable_plugin/2`\n\nEnable a plugin (Erlang application) and register its hooks.\n\n```erlang\n%% Enable plugin\nok = hooks:enable_plugin(my_plugin).\n\n%% Enable plugin with custom code paths\nok = hooks:enable_plugin(my_plugin, [\"path/to/plugin\"]).\n```\n\nPlugins expose hooks through their application environment:\n\n```erlang\n%% In plugin's .app.src file\n{env, [\n    {hooks, [\n        {on_connect, [{my_plugin, handle_connect, 2}]},\n        {on_disconnect, [{my_plugin, handle_disconnect, 1}]}\n    ]}\n]}\n```\n\n#### `disable_plugin/1`\n\nDisable a plugin and unregister its hooks.\n\n```erlang\nok = hooks:disable_plugin(my_plugin).\n```","ref":"readme.html#plugin-management"},{"type":"extras","title":"Utility Functions - Overview","doc":"#### `find/1`\n\nFind all registered hooks for a hook name.\n\n```erlang\n{ok, [{Module, Function}, ...]} = hooks:find(HookName).\nerror = hooks:find(NonExistentHook).\n```","ref":"readme.html#utility-functions"},{"type":"extras","title":"Advanced Features - Overview","doc":"","ref":"readme.html#advanced-features"},{"type":"extras","title":"Internal Hooks - Overview","doc":"Two internal hooks are available for the hooks application itself:\n\n- `init_hooks` - Called when hooks application starts (arity 0)\n- `build_hooks` - Called when the hook list changes (arity 1, receives hook list)","ref":"readme.html#internal-hooks"},{"type":"extras","title":"Wait for Process - Overview","doc":"The `wait_for_proc` application environment setting allows hooks to wait for a specific registered process before becoming available:\n\n```erlang\n%% In your app.config or sys.config\n[\n    {hooks, [\n        {wait_for_proc, my_main_process}\n    ]}\n].\n```\n\nThis ensures hooks aren't executed until your main application process is ready.","ref":"readme.html#wait-for-process"},{"type":"extras","title":"Examples - Overview","doc":"","ref":"readme.html#examples"},{"type":"extras","title":"Authentication Hook System - Overview","doc":"```erlang\n%% Define authentication modules\n-module(basic_auth).\n-export([authenticate/2]).\n\nauthenticate(Username, Password) ->\n    %% Basic authentication logic\n    case check_credentials(Username, Password) of\n        true -> ok;\n        false -> {error, invalid_credentials}\n    end.\n\n-module(ldap_auth).\n-export([authenticate/2]).\n\nauthenticate(Username, Password) ->\n    %% LDAP authentication logic\n    case ldap:check(Username, Password) of\n        {ok, _} -> ok;\n        _ -> {error, ldap_auth_failed}\n    end.\n\n%% Register authentication hooks\nhooks:reg(authenticate, basic_auth, authenticate, 2, 10).\nhooks:reg(authenticate, ldap_auth, authenticate, 2, 5).\n\n%% Use authentication\ncase hooks:all_till_ok(authenticate, [Username, Password]) of\n    ok -> login_success();\n    {ok, UserData} -> login_success(UserData);\n    {error, Reasons} -> login_failed(Reasons)\nend.\n```","ref":"readme.html#authentication-hook-system"},{"type":"extras","title":"Event Processing Pipeline - Overview","doc":"```erlang\n%% Define event processors\n-module(logger).\n-export([process_event/1]).\n\nprocess_event(Event) ->\n    error_logger:info_msg(\"Event: ~p~n\", [Event]),\n    Event.\n\n-module(metrics).\n-export([process_event/1]).\n\nprocess_event(Event) ->\n    prometheus:increment(event_counter),\n    Event.\n\n-module(validator).\n-export([process_event/1]).\n\nprocess_event(Event) ->\n    case is_valid(Event) of\n        true -> Event;\n        false -> stop  %% Stop processing invalid events\n    end.\n\n%% Register event processors\nhooks:reg(on_event, validator, process_event, 1, 100).  %% Highest priority\nhooks:reg(on_event, logger, process_event, 1, 50).\nhooks:reg(on_event, metrics, process_event, 1, 10).\n\n%% Process an event\nhooks:run(on_event, [Event]).\n```","ref":"readme.html#event-processing-pipeline"},{"type":"extras","title":"Plugin-based Extension System - Overview","doc":"```erlang\n%% my_plugin.app.src\n{application, my_plugin,\n [{description, \"My plugin\"},\n  {vsn, \"1.0.0\"},\n  {modules, []},\n  {env, [\n    {hooks, [\n        {startup, [{my_plugin, on_startup, 0}]},\n        {shutdown, [{my_plugin, on_shutdown, 0}]},\n        {request, [{my_plugin, on_request, 2}]}\n    ]}\n  ]}\n]}.\n\n%% Enable the plugin\nhooks:enable_plugin(my_plugin).\n\n%% The hooks are now automatically registered and will be called\nhooks:run(startup, []).\n```","ref":"readme.html#plugin-based-extension-system"},{"type":"extras","title":"Performance Considerations - Overview","doc":"1. **Hook Storage**: Hooks are stored in ETS during registration and in persistent_term for execution, providing constant-time lookups.\n\n2. **Compilation**: No dynamic module compilation - all hooks are immediately available.\n\n3. **Memory**: Very memory efficient as persistent_term is optimized for read-heavy workloads.\n\n4. **Concurrency**: Multiple processes can execute hooks simultaneously without locks.","ref":"readme.html#performance-considerations"},{"type":"extras","title":"Contributing - Overview","doc":"Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.\n\n1. Fork the repository\n2. Create your feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add some amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request","ref":"readme.html#contributing"},{"type":"extras","title":"License - Overview","doc":"Copyright (c) 2015-2025 Benoît Chesneau.\n\nThis project is licensed under the BSD License - see the [LICENSE](LICENSE) file for details.","ref":"readme.html#license"},{"type":"extras","title":"Acknowledgments - Overview","doc":"- Originally created for the [barrel-db](https://github.com/barrel-db) project\n- Inspired by various plugin systems in the Erlang ecosystem\n- Thanks to all contributors who have helped improve this library","ref":"readme.html#acknowledgments"},{"type":"extras","title":"Resources - Overview","doc":"- [Hex Package](https://hex.pm/packages/hooks)\n- [Documentation](https://hexdocs.pm/hooks/)\n- [GitHub Repository](https://github.com/benoitc/hooks)\n- [Issue Tracker](https://github.com/benoitc/hooks/issues)","ref":"readme.html#resources"},{"type":"extras","title":"Changelog","doc":"# Changelog","ref":"news.html"},{"type":"extras","title":"Version 3.0.0 (2025) - Changelog","doc":"- Replaced dynamic module compilation with persistent_term storage\n- Converted from gen_server to gen_statem for better state management\n- Improved performance with incremental updates\n- Added proper wait_for_proc support with deferred execution\n- Updated documentation to hexdoc format\n- Added GitHub Actions CI","ref":"news.html#version-3-0-0-2025"},{"type":"extras","title":"Version 2.1.0 - Changelog","doc":"- Previous stable release with dynamic module compilation","ref":"news.html#version-2-1-0"},{"type":"extras","title":"License","doc":"Copyright (c) 2015-2025, Benoît Chesneau  .\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\n* The names of its contributors may not be used to endorse or promote\n  products derived from this software without specific prior written\n  permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","ref":"license.html"}],"proglang":"erlang","content_type":"text/markdown","producer":{"name":"ex_doc","version":"0.38.2"}}